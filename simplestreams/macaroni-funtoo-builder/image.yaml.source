image:
  distribution: macaroni
  description: Macaroni OS Phoenix Builder
  expiry: 30d
  architecture: amd64

source:
  downloader: docker-http
  url: macaronios/phoenix-minimal-devel:latest-amd64

environment:
  clear_defaults: true
  variables:
    - key: "PATH"
      value: "/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
    - key: "SHELL"
      value: "/bin/bash"
    - key: "LUET_NOLOCK"
      value: "true"
    - key: "LUET_YES"
      value: "true"
    - key: "USER"
      value: "root"
    - key: "LC_ALL"
      value: "en_US.UTF-8"

targets:
  lxc:
    create_message: |
      You just created a Macaroni container (arch={{ image.architecture }})

    config:
      - type: all
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/funtoo.common.conf

      - type: user
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/funtoo.userns.conf

      - type: all
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/common.conf

      - type: user
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

      - type: all
        content: |-
          lxc.arch = {{ image.architecture_kernel }}

files:
 - path: /etc/hostname
   generator: hostname

 - path: /etc/hosts
   generator: hosts

 - name: conf-hostname
   path: /etc/conf.d/hostname
   generator: template
   content: |-
     hostname="{{ container.name }}"
     #aliases="mybox server1"
     #nisdomainname="localdomain.com"

packages:
  manager: anise
  update: true
  cleanup: true

  sets:
    - packages:
        - sys-apps/diffutils
        - sys-apps/corenetwork
        - app-admin/eselect
        - net-misc/dhcp
        - sys-process/procps
        - sys-apps/dbus
        - sys-auth/elogind
        - sys-devel/make
        # Until new dev release is stable
        - dev-libs/libpcre2

        - macaroni/ctl
        - app-admin/whip
        - sys-apps/whip-catalog

        - system/luet-devkit
        - app-misc/yq-go

        - sys-libs/binutils-libs
        - binutils
        - sys-devel/gcc-config

        - system/luet-build
        - system/luet-devkit

        - dev-util/debootstrap
        - app-emulation/distrobuilder
        - app-emulation/simplestreams-builder
        - app-emulation/lxd
        - app-emulation/docker
        - app-emulation/docker-buildx
        - net-misc/cni-plugins
        - dev-util/mottainai-cli
        - dev-util/replicant
        - app-admin/ego
        - sys-apps/portage
        - app-portage/elt-patches
        - app-portage/gentoolkit
        - app-portage/portage-utils

        # Needed for ssh-keygen
        - openssh

        # Needed for correctly login through /dev/console
        - sys-apps/baselayout

        - app-misc/jq
        - app-misc/yq

        - curl
        - wget
        - rsync
        - gnupg
        - squashfs-tools
        - bridge-utils
        - ca-certificates

      action: install

actions:
  - trigger: post-unpack
    action: |-
      #!/bin/bash
      # NOTE: if these files is not present the generators skip the template
      # generation
      echo "
      ff02::2    ip6-allrouters
      " > /etc/hosts
      echo "macaroni" > /etc/hostname

      # Ensure that the /tmp directory is present
      mkdir /tmp || true
      chmod a+rwx /tmp

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Setup openrc runlevels. TODO: move this to package script.
      #
      EROOT=/ whip hook openrc.openrc_setup

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Create lock directory used by Luet
      mkdir -p /var/lock

      #! /bin/sh
      set -eux
      rm -rf /var/git/meta-repo
      rm -rf /var/cache/portage
      cd /etc/init.d
      ln -s netif.tmpl netif.eth0
      rc-update add netif.eth0 default
      echo template=dhclient > /etc/conf.d/netif.eth0

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Initialize localization
      locale-gen || true
      eselect locale list
      eselect locale set en_US.utf8

  # Temporary workaround until mottainai-cli and replicant
  # will be available on mark-repo
  - trigger: post-packages
    action: |-
      anise repo update
      anise i repository/mottainai-stable
      anise i --sync-repos mottainai-cli replicant
      anise repo disable mottainai-stable
      anise cleanup

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Set localtime
      rm /etc/localtime || true
      ln -s /usr/share/zoneinfo/UTC /etc/localtime

      # Force TMPDIR because the value from task used by
      # distrobuilder breaks the gcc setup.
      export TMPDIR=/tmp
      /usr/bin/gcc-config 1
      source /etc/profile
      eselect gcc set 1
      mkdir -p /var/lib/portage

      macaronictl env-update

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Configure LXD/LXC tty
      sed -e 's|^#x1|x1|g' -e '/^c[0-9].*/d' -i /etc/inittab

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Configure proctect config
      mkdir -p /etc/luet/config.protect.d/ || true
      echo "
      name: \"etc_conf\"
      dirs:
        - \"/etc/\"
      " > /etc/luet/config.protect.d/01_etc.yml

  - trigger: post-packages
    action: |-
      #!/bin/bash
      anise cleanup --purge-repos

mappings:
  architecture_map: funtoo

# vim: filetype=yaml
