image:
  distribution: macaroni
  decription: Funtoo Macaroni OS Builder
  expiry: 30d
  architecture: amd64

source:
  downloader: docker-http
  url: macaronios/funtoo-minimal

environment:
  clear_defaults: true
  variables:
    - key: "PATH"
      value: "/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
    - key: "SHELL"
      value: "/bin/bash"
    - key: "LUET_NOLOCK"
      value: "true"
    - key: "LUET_YES"
      value: "true"
    - key: "USER"
      value: "root"
    - key: "LC_ALL"
      value: "en_US.UTF-8"

targets:
  lxc:
    create-message: |
      You just created a Macaroni container (arch={{ image.architecture }})

    config:
      - type: all
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/funtoo.common.conf

      - type: user
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/funtoo.userns.conf

      - type: all
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/common.conf

      - type: user
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

      - type: all
        content: |-
          lxc.arch = {{ image.architecture_kernel }}

files:
 - path: /etc/hostname
   generator: hostname

 - path: /etc/hosts
   generator: hosts

 - name: conf-hostname
   path: /etc/conf.d/hostname
   generator: template
   content: |-
     hostname="{{ container.name }}"
     #aliases="mybox server1"
     #nisdomainname="localdomain.com"

packages:
  manager: luet
  update: true
  cleanup: true

  sets:
    - packages:
        - system/entities
        - sys-apps/shadow
        - sys-apps/sysvinit
        - sys-apps/diffutils
        - sys-apps/sed
        - sys-apps/openrc
        - sys-apps/coreutils
        - sys-apps/gentoo-functions
        - app-shells/bash
        - sys-apps/iproute2
        - sys-libs/readline
        - sys-devel-9.2.0/gcc
        - system/funtoo-triggers
        - sys-apps/corenetwork
        - dev-libs-3/libpcre
        - app-admin/eselect
        - net-misc/dhcp
        - net-libs/libmnl
        - sys-process/procps
        - sys-auth/elogind
        - sys-devel/make

        - macaroni/whip-catalog
        - whip-profiles/macaroni
        - app-admin/whip
        - pkglist/funtoo-base
        - pkglist/funtoo-emulation

        - virtual/base
        - sys-libs/binutils-libs
        - sys-devel/binutils-config
        - sys-devel-2.36/binutils
        - sys-devel/gcc-config

        - app-emulation/distrobuilder
        - app-emulation/simplestreams-builder
        - app-emulation/lxd
        - app-emulation/docker
        - dev-util/mottainai-cli
        - dev-util/replicant
        - app-admin/ego
        - sys-apps/portage
        - app-portage/elt-patches
        - app-portage/gentoolkit
        - app-portage/portage-utils

      action: install

actions:
  - trigger: post-unpack
    action: |-
      #!/bin/bash
      # Fix /bin/sh link that broke openrc. Will be managed by the finalizer.
      if [ ! -e /bin/sh ] ; then
        cd /bin && ln -s bash sh
      fi

      if [ ! -e /usr/bin/awk ] ; then
        cd /usr/bin && ln -s gawk awk
      fi

      # TODO: fix this in distrobuilder
      luet repo update

      luet i utils/yq utils/jq
      # Enable subsets portage and devel
      yq w /etc/luet/luet.yaml 'subsets.enabled[0]' 'portage' -i
      yq w /etc/luet/luet.yaml 'subsets.enabled[1]' 'devel' -i

      luet reinstall --force $(luet s --installed  -o json | jq '.packages[] | .category + "/" + .name' -r)
      luet cleanup

      # NOTE: if these files is not present the generators skip the template
      # generation
      echo "
      ff02::2    ip6-allrouters
      " > /etc/hosts
      echo "macaroni" > /etc/hostname

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Setup openrc runlevels. TODO: move this to package script.
      #
      EROOT=/

      source /lib/rc/sh/functions.sh

      for r in sysinit boot shutdown default nonetwork; do
        if [ ! -e ${EROOT}/etc/runlevels/$r ]; then
          install -d ${EROOT}/etc/runlevels/$r
          # install missing scripts
        fi
        for sc in $(cd ${EROOT}/usr/share/openrc/runlevels/$r; ls); do
          if [ ! -L ${EROOT}/etc/runlevels/$r/$sc ]; then
            einfo "Missing $r/$sc script, installing..."
            cp -a ${EROOT}/usr/share/openrc/runlevels/$r/$sc ${EROOT}/etc/runlevels/$r/$sc
          fi
        done
        # warn about extra scripts
        for sc in $(cd ${EROOT}/etc/runlevels/$r; ls); do
          if [ "$sc" == "netif.lo" ]; then
            einfo "Removing old initscript netif.lo."
            rm ${EROOT}/etc/runlevels/$r/$sc
          fi
          if [ ! -L ${EROOT}/usr/share/openrc/runlevels/$r/$sc ]; then
            ewarn "Extra script $r/$sc found, possibly from other ebuild."
          fi
        done
      done

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Create lock directory used by Luet
      mkdir -p /var/lock
      rm -rf /var/cache/luet/repos/

      #! /bin/sh
      set -eux
      rm -rf /var/git/meta-repo
      rm -rf /var/cache/portage
      cd /etc/init.d
      ln -s netif.tmpl net.eth0
      rc-update add net.eth0 default
      echo template=dhclient > /etc/conf.d/net.eth0

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Create /etc/shadow,/etc/group,/etc/gshadow,/etc/passwd files
      touch /etc/shadow
      touch /etc/group
      touch /etc/gshadow
      touch /etc/passwd
      # needed for docker
      touch /etc/fstab
      entities merge -s /usr/share/macaroni/layers/funtoo-emulation/entities/ -a

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Initialize localization
      locale-gen || true
      eselect locale list
      eselect locale set en_US.utf8

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Set localtime
      rm /etc/localtime || true
      ln -s /usr/share/zoneinfo/UTC /etc/localtime

      /usr/bin/gcc-config 1
      source /etc/profile
      eselect gcc set 1
      eselect binutils set 1
      mkdir -p /var/lib/portage

      env-update
      ldconfig

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Configure proctect config
      mkdir -p /etc/luet/config.protect.d/ || true
      echo "
      name: \"etc_conf\"
      dirs:
        - \"/etc/\"
      " > /etc/luet/config.protect.d/01_etc.yml

mappings:
  architecture_map: funtoo

# vim: filetype=yaml
