image:
  distribution: macaroni
  description: Funtoo Macaroni OS Minimal Devel
  expiry: 30d
  architecture: amd64

source:
  downloader: docker-http
  # For docker is mandatory for now use 
  url: macaronios/funtoo-minimal-devel:latest-amd64

environment:
  clear_defaults: true
  variables:
    - key: "PATH"
      value: "/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
    - key: "SHELL"
      value: "/bin/bash"
    - key: "LUET_NOLOCK"
      value: "true"
    - key: "LUET_YES"
      value: "true"
    - key: "USER"
      value: "root"
    - key: "LC_ALL"
      value: "en_US.UTF-8"

targets:
  lxc:
    create_message: |
      You just created a Macaroni container (arch={{ image.architecture }})

    config:
      - type: all
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/sabayon.common.conf

      - type: user
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/sabayon.userns.conf

      - type: all
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/common.conf

      - type: user
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/userns.conf

      - type: all
        content: |-
          lxc.arch = {{ image.architecture_kernel }}

files:
 - name: hostname
   path: /etc/hostname
   generator: hostname

 - name: hosts
   path: /etc/hosts
   generator: hosts

 - name: conf-hostname
   path: /etc/conf.d/hostname
   generator: template
   content: |-
     hostname="{{ container.name }}"
     #aliases="mybox server1"
     #nisdomainname="localdomain.com"
packages:
  manager: luet
  update: true
  cleanup: true

  sets:
    - packages:
        - sys-apps/corenetwork
        - dev-libs-3/libpcre
        - app-admin/eselect
        - net-misc/dhcp
        - net-libs/libmnl
        - sys-process/procps
        - sys-auth/elogind
        - macaroni/whip-catalog
        - whip-profiles/macaroni
        - app-admin/whip

        # Needed for correctly login through /dev/console
        - sys-apps/baselayout

      action: install

actions:
  - trigger: post-unpack
    action: |-
      #!/bin/bash
      # TODO: fix this in distrobuilder
      luet repo update

      # NOTE: if these files is not present the generators skip the template
      # generation
      echo "
      ff02::2    ip6-allrouters
      " > /etc/hosts
      echo "macaroni" > /etc/hostname

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Setup openrc runlevels. TODO: move this to package script.
      #
      EROOT=/ whip hook openrc.openrc_setup

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Create lock directory used by Luet
      mkdir -p /var/lock

      macaronictl env-update

      #! /bin/sh
      set -eux
      rm -rf /var/git/meta-repo
      rm -rf /var/cache/portage
      cd /etc/init.d
      ln -s netif.tmpl netif.eth0
      rc-update add netif.eth0 default
      echo template=dhclient > /etc/conf.d/netif.eth0

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Initialize localization
      locale-gen || true
      eselect locale list
      eselect locale set en_US.utf8

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Configure proctect config
      mkdir -p /etc/luet/config.protect.d/ || true
      echo "
      name: \"etc_conf\"
      dirs:
        - \"/etc/\"
      " > /etc/luet/config.protect.d/01_etc.yml

  - trigger: post-packages
    action: |-
      #!/bin/bash
      # Configure LXD/LXC tty
      sed -e 's|^#x1|x1|g' -e '/^c[0-9].*/d' -i /etc/inittab

  - trigger: post-packages
    action: |-
      #!/bin/bash
      luet cleanup --purge-repos

mappings:
  architecture_map: funtoo

# vim: filetype=yaml
