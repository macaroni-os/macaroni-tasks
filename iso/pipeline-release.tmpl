# Author: Daniele Rondina, geaaru@funtoo.org
# Description: Pipeline to build ISO, generate Portal data,
#              sync ISO to CDN.

{{ $release := .release }}
pipeline_name: "Macaroni ISO Release {{ $release }} - {{ .date }}"

# group:
chain:
{{ $isos := .isos }}
{{ range $index, $iso := $isos }}{{ $name := index $iso "name" }}{{ $forrelease := index $iso "release" }}
{{- if $forrelease }}
- iso-{{ $name }}-{{ $release }}
{{ end }}
{{ end }}

# chord:
- generate-iso-json

tasks:
{{ range $idx, $iso := $isos }}
  {{ $name := index $iso "name" }}{{ $repo := index $iso "repo" }}{{ $specfile := index $iso "specfile" }}{{ $repo_branch := index $iso "repo_branch" }}{{ $forrelease := index $iso "release" }}
  {{- if $forrelease }}
  iso-{{ $name }}-{{ $release }}:
    name: "ISO: Build {{ $name }}-{{ $release }}"
    image: macaroni/phoenix-builder
    disable_push_on_failure: "true"
    type: lxd
    queue: iso
    artefact_path: /iso
    environment:
    - "repo={{ $repo }}"
    - "repo_branch={{ $repo_branch }}"
    - "spec_file={{ $specfile }}"
    - "WORKSPACE=iso/"
    - "LUET_CONFIG_PROTECT_SKIP=true"
    - "LUET_GENISO_OUTPUT=/dev/stdout"
    - "LUET_GENERAL__CONCURRENCY=8"
    - "LUET_BOX_INSTALLER=0"
    - "LUET_FORCE=true"
    - "LUET_OPTS=--sync-repos"
    - "LUET_NOLOCK=true"
    - "LUET_YES=TRUE"
    - "LUET_BIN=/usr/bin/anise"
    - "BUILD_ISO=1"
    - "HTTP_TIMEOUT=0"
    - "RELEASE={{ $release }}"
    tag_namespace: "iso-{{ $name }}-{{ $release }}"
    retry: "1"
    script:
    - >-
      anise upgrade --sync-repos -y &&
      anise i -y file git make wget curl squashfs-tools dosfstools libisoburn ca-certificates
      utils/yq utils/jq system/luet-devkit util-linux &&
      anise cleanup

    # We need to migrate scripts to yq4. Download old binary as workaround.
    - >-
      wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64 &&
      chmod a+x /usr/bin/yq

    # Using always last geniso commit
    - >-
      git clone https://github.com/geaaru/extensions.git /extensions &&
      cd /extensions/extensions/geniso && make install

    # Temporary: this must be handled in a different way.
    - >-
      eval 'mkdir /var/lib/macaroni -p || true' &&
      wget https://raw.githubusercontent.com/macaroni-os/macaroni-funtoo/phoenix/packages/macaroni/live-setup/build-iso-hook.sh
      -O /var/lib/macaroni/build-iso-hook.sh

    # Clone the repository with luet-geniso specs
    - >-
      echo "Cloning ${repo} for branch ${repo_branch}..." &&
      git clone ${repo} -b ${repo_branch} /repo &&
      cd /repo/${WORKSPACE} &&
      image_prefix=$(echo $(yq r ${spec_file} 'image_prefix') | sed -e "s|-0.$|-${RELEASE}|g") &&
      yq w -i ${spec_file} 'image_prefix' "${image_prefix}" &&
      yq w -i ${spec_file} 'image_date' 'false' &&
      export TMPDIR=./tmp &&
      mkdir $TMPDIR -p &&
      bash -x luet-geniso-isospec ${spec_file} &&
      ls -ltr

    - mv *.iso *.sha256 iso-meta.* /iso/

    # Write loopback status
    - losetup -l

{{ end }}
{{ end }}

  generate-iso-json:
    name: "ISO: Build JSON"
    script:

    - >-
      anise install --sync-repos dev-util/mottainai-cli
      utils/jq utils/yq make git bash

    - git clone ${REPO} repo
    - cd repo/iso
    - export HOME=/root && mkdir -p /root/.config/
    - /bin/bash /storage/setup-mcli.sh
    - >-
      /bin/bash scripts/generate-iso-json.sh &&
      cp -rvf portal/* /www &&
      cp /tmp/isos.json /www/ &&
      cp /tmp/isos-releases.json /www/
    artefact_path: /www
    image: macaroni/phoenix-builder
    type: lxd
    environment:
    - "REPO=https://github.com/macaroni-os/macaroni-tasks.git"
    - LUET_SYSTEM__TMPDIR_BASE=/luettmp
    - LUET_YES=true
    entrypoint:
    - /bin/sh
    - "-c"
    storage: "mcli"
    storage_path: /storage
    tag_namespace: "macaroni-iso"

# vim: filetype=yaml
