# Author: Daniele Rondina, geaaru@macaronios.org
# Description: Chain pipeline to upgrade extra packages related to the
#              selected kits to upgrade.
#              The extra packages are the packages generated not
#              directly from the mark/stage3 images.
#
#              In particular, follow these steps:
#
#              a) execute the new repoman elaboration and generates
#                 the kit-cache files (that stores in the namespace
#                 <repo-name>-repoman) and bump the new release of
#                 the packages:
#                    - seed/mark-kits
#                    - toolchain/meta-repo
#                    - (the seeds defined in the file luet-repo.values)
#                 with the commits in the target repository.
#                 NOTE: if there aren't changes in the selected
#                 kits to upgrade it doesn't bump nothing and it dies.
#
#              b) execute the build of the packages:
#                    - seed/mark-kits
#                    - toolchain/meta-repo
#                 with the --push option in the luet command
#                 that permits to sync the generated docker image
#                 in the internal docker registry.
#
#              c) bump a new revision of the selected repository and
#                 purge the CDN repositories files.
#                 For repositories stored in the CDN storage it
#                 runs also the rsync for the repository.
#
#              d) sleep 15min to ensure the propagation of the purge
#                 files
#
#              e) run a task that execute the build of the packages:
#                 defined in the attribute seeds2bmp attribute of the
#                 file luet-repo.values.
#                 with the --push option in the luet command
#                 that permits to sync the generated docker image
#                 in the internal docker registry.
#

pipeline_name: "anise - upgrade kits <{{ .namespace }}> - {{ dateInZone "2006-01-02T15:04:05.000Z" (now) "UTC" }}"
chain:
- upgrade-kits
- update-kits-pkgs
- bump-repo-revision
- purge-cdn-files
- build-seeds-base

tasks:
  upgrade-kits:
    name: "Anise Upgrade Kits <{{ .namespace }}> - {{ dateInZone "2006-01-02T15:04:05.000Z" (now) "UTC" }} - Bump revision"
    script:

    # anise i --sync-repos utils/jq utils/yq utils/yq4 net-misc/openssh system/luet-build macaroni/ctl mark-devkit anise-portage-converter &&
    - >-
      anise repo update --force &&
      anise i repository/mark &&
      anise i --sync-repos net-misc/openssh mark-devkit app-admin/anise-portage-converter &&
      anise upgrade &&
      anise cleanup &&
      macaronictl env-update

    # Setup git ssh key
    - eval 'mkdir -p /root || true'
    - sh /storage/setup-ssh.sh
    - sh /storage/setup-git.sh

    - git clone ${REPO} -b ${REPO_BRANCH} /anise-repo

    # Update kits only selected
    - >-
      for kit in ${KITS_2UPGRADE} ; do
      echo "Upgrading kit ${kit}..." ;
      yq4 -i e "del(.sources[] | select(.name == \"${kit}\") | .commit_sha1 )" /anise-repo/packages/${KITS_PACKAGE_PATH}/kits-versions/kits.yaml ;
      done ;
      echo "kits.yaml ready!"

    # Create the reposcan files
    - >-
      mark-devkit --version &&
      set -x &&
      mkdir /kit-cache/ &&
      mark-devkit kit clone --specfile /anise-repo/packages/${KITS_PACKAGE_PATH}/kits-versions/kits.yaml --generate-reposcan-files
      --write-summary-file /kit-cache/kits.yaml --concurrency ${MARKDEVKIT_CONCURRENCY}
      --kit-cache-dir /kit-cache/ --deep ${MARKDEVKIT_GITDEEP}

    # Copy the new kits.yaml files to seeds/mark-kits
    - cp -v /kit-cache/kits.yaml /anise-repo/packages/${KITS_PACKAGE_PATH}/kits-versions/

    - >-
      cd /anise-repo &&
      export changes=$(git status -s | grep "M " | wc -l ) &&
      if [ "${changes}" != "0" ] ; then
      fkv=$(yq r /anise-repo/packages/${KITS_PACKAGE_PATH}/definition.yaml 'version') &&
      nv="0.$(date '+%Y%m%d')" &&
      tbump_opts="" &&
      if [ "${fkv}" != "${nv}" ] ; then
      tbump_opts="${tbump_opts} -p ${nv}" ;
      fi &&
      luet-build tree bump -f /anise-repo/packages/${KITS_PACKAGE_PATH}/definition.yaml ${tbump_opts} &&
      {{- if eq .meta_repo "true" }}
      luet-build tree bump -f /anise-repo/packages/toolchain/meta-repo/definition.yaml ${tbump_opts} &&
      {{- end }}
      luet-build tree bump -f /anise-repo/packages/toolchain/meta-reposcan/definition.yaml ${tbump_opts} &&
      for i in ${SEEDS2BUMP} ; do
      name=$(echo $i | cut -d'/' -f2) ;
      luet-build tree bump -f /anise-repo/packages/seeds/${name}/definition.yaml ${tbump_opts} ;
      if [ -d /anise-repo/packages/seed/${name}/pkglist ] ; then
      luet-build tree bump -f /anise-repo/packages/seeds/${name}/pkglist/definition.yaml ${tbump_opts} ;
      fi ;
      done ;
      else
      echo "No changes. Exiting and stop pipeline." && exit 1 ;
      fi

    # Commit new version
    - >-
      if [ "${changes}" != "0" ] ; then
      BUMPER_DIR="./packages/" sh ./scripts/bumper.sh &&
      eval 'git push || true' ;
      fi

    # Copy the generated JSON file to artefacts dir
    - eval 'cp -vf /kit-cache/* /artefacts/ || true'

    environment:
    - "REPO_BRANCH={{ .repobranch }}"
    - "REPO={{ .repossh }}"
    - "MARKDEVKIT_CONCURRENCY=20"
    - "MARKDEVKIT_GITDEEP=1000"
    - "KITS_PACKAGE={{ .kits_package }}"
    - "KITS_PACKAGE_PATH={{ .kits_package_path }}"
    - "KITS_2UPGRADE={{ .kits2upgrade }}"
    - "SEED2BUMP={{ .seeds2bump }}"
    - LUET_SYSTEM__TMPDIR_BASE=/anisetmp
    - LUET_YES=true
    image: macaroni/phoenix-builder
    storage: geaaru-github
    storage_path: /storage
    artefact_path: /artefacts
    type: lxd
    tag_namespace: "{{ .namespace }}-reposcan"


# Step B -------------------- Build seed/mark-kits and toolchain/meta-repo packages.

  update-kits-pkgs:

    name: "Anise Upgrade Kits Seeds <{{ .namespace }}> - {{ dateInZone "2006-01-02T15:04:05.000Z" (now) "UTC" }}"
    storage: docker-certs
    storage_path: /storage
    script:
    - source /storage/prepare-luet.sh
    - >-
      anise repo update &&
      anise upgrade &&
      anise cleanup --purge-repos
    - >-
      docker login -u ${registry_user} -p ${registry_pass}
      docker-registry1.mottainai.local:5000

    - export BUILD_ARGS="--no-spinner --emoji=true --color=false  --live-output --only-target-package  --pull"
    {{- if eq .enable_docker_host "true" }}
    - echo "Using DOCKER_HOST ${DOCKER_HOST}..."
    {{- else }}
    - /etc/init.d/docker start
    {{- end }}
    - git clone ${REPO} -b ${REPO_BRANCH} /build
    # mkdir /build/build until this will be fixed in luet.
    # Error: Error met while extracting image: Could not create tempdir: stat /build/build: no such file or directory
    - cd /build && mkdir build/ && make rebuild
    - >-
      rm -rf build/build &&
      cp -v build/* /artefacts/
    environment:
    {{- if eq .enable_buildkit "true" }}
    - "BUILDKIT_PROGRESS=plain"
    - "DOCKER_BUILDKIT=1"
    {{- end }}
    - "REPO_CACHE=docker-registry1.mottainai.local:5000/anise-{{ .namespace }}-tree"
    - "REPO={{ .repohttp }}"
    - "REPO_BRANCH={{ .repobranch }}"
    - LUET_SYSTEM__TMPDIR_BASE=/anisetmp
    - LUET_YES=true
    {{- if eq .enable_docker_host "true" }}
    - DOCKER_HOST=docker-overlay2.mottainai.local:2376
    {{- end }}
    - "PACKAGES={{ .kits_package }} {{- if eq .meta_repo "true" }} toolchain/meta-repo{{- end }} reposcan/meta-{{ .mark_release }}"
    image: macaroni/phoenix-builder
    artefact_path: /artefacts
    type: lxd
    #retry: "2"
    publish_mode: append
    tag_namespace: "{{ .namespace }}"

# Step c -------------------- Bump a new revision of the selected repository

  bump-repo-revision:
    name: "anise - < {{ .namespace }} > - Bump revision"
    script:
    - git clone ${REPO} -b ${REPO_BRANCH} repo
    - cd repo
    - export HOME=/root && mkdir -p /root/.config/
    - /bin/bash /storage/setup-mcli.sh
#    {{- if eq .treeversion "v2" }}
#    - >-
#      anise repo update &&
#      anise upgrade &&
#      anise miner replace-package system/luet-build --for system/luet-build-testing &&
#      anise cleanup --purge-repos
#    {{- end }}
    - >-
      MOTTAINAI_CLI_PROFILE=funtoo
      mottainai-cli namespace download $NAMESPACE build -f '.*metadata.yaml|repository.yaml$|repository.meta.yaml.tar.zst$'
    - ls -l build/
    - make create-repo
    - rm build/*.metadata.yaml -v && mv build/* ../artefacts/
    entrypoint:
    - /bin/sh
    - "-c"
    storage: "mcli"
    storage_path: /storage
    environment:
    - "REPO_BRANCH={{ .repobranch }}"
    - "REPO={{ .repohttp }}"
    - "SUDO="
    - LUET_SYSTEM__TMPDIR_BASE=/anisetmp
    - LUET_YES=true
    - COMPRESSION=zstd
    - NAMESPACE={{ .namespace }}
    - "BUILD_ARGS=--config conf/luet.yaml"
    image: macaroni/phoenix-builder
    artefact_path: artefacts
    type: lxd
    directory: /
    publish_mode: append
    tag_namespace: "{{ .namespace }}"

# Step C and D -------------------- Purge CDN repo files

  purge-cdn-files:
    name: "Purge files from CDN resource ({{ .namespace }})"
    type: "lxd"
    storage: "cloudflare,cdn77"
    storage_path: /storage
    entrypoint:
    - /bin/sh
    - "-c"
    script:
    - >-
      git clone https://github.com/macaroni-os/macaroni-tasks.git
      /macaroni-tasks &&
      cd /macaroni-tasks &&
      source /storage/cloudflare.env &&
      source /storage/cdn77.env &&
      export NAME=${NAME} &&
      export CDN77_TOKEN CLOUDFLARE_TOKEN CLOUDFLARE_ZONEID &&
      cdn/api/purge-repo-files.sh
    - echo "Sleeping to wait purge propagation... " && sleep 900
    image: "macaroni/phoenix-builder"
    environment:
    - "NAME={{ .namespace }}"

# Step E -------------------- Build {{ .seeds2bump }} packages.
  build-seeds-base:
    name: "anise - {{ .seeds2bump }} <{{ .namespace }}> - {{ dateInZone "2006-01-02T15:04:05.000Z" (now) "UTC" }}"
    storage: docker-certs
    storage_path: /storage
    script:
    - source /storage/prepare-luet.sh
    - >-
      anise repo update &&
      anise upgrade &&
      anise cleanup --purge-repos
    - >-
      docker login -u ${registry_user} -p ${registry_pass}
      docker-registry1.mottainai.local:5000

    - export BUILD_ARGS="--no-spinner --emoji=true --color=false  --live-output --only-target-package  --pull --push"
    {{- if eq .enable_docker_host "true" }}
    - echo "Using DOCKER_HOST ${DOCKER_HOST}..."
    {{- else }}
    - /etc/init.d/docker start
    {{- end }}
    - git clone ${REPO} -b ${REPO_BRANCH} /build
    # mkdir /build/build until this will be fixed in luet.
    # Error: Error met while extracting image: Could not create tempdir: stat /build/build: no such file or directory
    - cd /build && mkdir build/ && make rebuild
    - >-
      rm -rf build/build &&
      cp -v build/* /artefacts/
    environment:
    {{- if eq .enable_buildkit "true" }}
    - "BUILDKIT_PROGRESS=plain"
    - "DOCKER_BUILDKIT=1"
    {{- end }}
    - "REPO_CACHE=docker-registry1.mottainai.local:5000/anise-{{ .namespace }}-tree"
    - "REPO={{ .repohttp }}"
    - "REPO_BRANCH={{ .repobranch }}"
    - LUET_SYSTEM__TMPDIR_BASE=/anisetmp
    - LUET_YES=true
    {{- if eq .enable_docker_host "true" }}
    - DOCKER_HOST=docker-overlay2.mottainai.local:2376
    {{- end }}
    - "PACKAGES={{ .seeds2bump }}"
    image: macaroni/phoenix-builder
    artefact_path: /artefacts
    type: lxd
    #retry: "2"
    publish_mode: append
    tag_namespace: "{{ .namespace }}"


# vim: filetype=yaml
