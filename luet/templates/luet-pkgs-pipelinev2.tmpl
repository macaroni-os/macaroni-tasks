# Description: Pipeline for build Macaroni Packages

pipeline_name: "Build Luet Packages <{{ .namespace }}> (v2) - {{ dateInZone "2006-01-02T15:04:05.000Z" (now) "UTC" }}"

{{- $reponame := .namespace }}
{{- $enable_docker_host := .enable_docker_host }}
{{- $enable_buildkit := .enable_buildkit }}
{{- $push_images := .push_images }}
{{- $branch := .branch }}
{{- $repo := .repo }}
{{- if .group }}
group:
{{- else }}
chain:
{{- end }}
{{- range $index, $val := .packages }}
  - package-{{ $index }}{{ end }}
{{- if .group }}
chord:
{{- end }}
  - create-repo
  - purge-cdn-files

tasks:
{{ range $idx , $data := .packages }}
  {{- $labels := index $data "labels" | default false }}
  {{- $queue := "" }}
  {{- if $labels }}{{- $queue = index $labels "queue" | default "" }}{{- end }}
  package-{{ $idx }}:
    name: "Build luet <{{ $reponame }}> - Package {{ index $data "category" }}/{{ index $data "name" }}-{{ index $data "version" }}"
    storage: docker-certs
    storage_path: /storage
    script:
    # VM/Disk slow take time on get ip
    - sleep 4
    - source /storage/prepare-luet.sh
    - >-
      luet repo update &&
      luet upgrade &&
      luet miner replace-package system/luet-build --for system/luet-build-testing &&
      luet cleanup --purge-repos
    - >-
      docker login -u ${registry_user} -p ${registry_pass}
      docker-registry1.mottainai.local:5000
    # TODO: check why is not handled correctly this variable by Mottainai.
    {{- if eq $push_images "true" }}
    - export BUILD_ARGS="--no-spinner --emoji=true --color=false  --live-output --only-target-package  --pull --push"
    {{- else }}
    - export BUILD_ARGS="--no-spinner --emoji=true --color=false  --live-output --only-target-package  --pull"
    {{- end }}
    {{- if eq $enable_docker_host "true" }}
    - echo "Using DOCKER_HOST ${DOCKER_HOST}..."
    - >-
      echo "Build Options: ${BUILD_ARGS}"
    {{- else }}
    - /etc/init.d/docker start
    {{- end }}
    - git clone ${REPO} -b ${REPO_BRANCH} /build
    # mkdir /build/build until this will be fixed in luet.
    # Error: Error met while extracting image: Could not create tempdir: stat /build/build: no such file or directory
    - cd /build && mkdir build/ && make rebuild
    - >-
      rm -rf build/build &&
      cp -v build/* /artefacts/
    environment:
    {{- if eq $enable_buildkit "true" }}
    - "BUILDKIT_PROGRESS=plain"
    - "DOCKER_BUILDKIT=1"
    {{- end }}
    - "REPO_CACHE=docker-registry1.mottainai.local:5000/luet-{{ $reponame }}-tree"
    - "REPO={{ $repo }}"
    - "REPO_BRANCH={{ $branch }}"
    - LUET_SYSTEM__TMPDIR_BASE=/luettmp
    - LUET_YES=true
    {{- if eq $enable_docker_host "true" }}
    - DOCKER_HOST=docker-overlay2.mottainai.local:2376
    {{- end }}
    - "PACKAGES={{ index $data "category" }}/{{ index $data "name" }}"
    image: macaroni/phoenix-builder
    artefact_path: /artefacts
    type: lxd
    #retry: "2"
    queue: "{{ $queue }}"
    publish_mode: append
    tag_namespace: "{{ $reponame }}"
{{end}}

  create-repo:

    name: "luet - < {{ $reponame }} > - Bump revision"
    script:
    - git clone ${REPO} -b ${REPO_BRANCH} repo
    - cd repo
    - export HOME=/root && mkdir -p /root/.config/
    - /bin/bash /storage/setup-mcli.sh
    - >-
      MOTTAINAI_CLI_PROFILE=funtoo
      mottainai-cli namespace download $NAMESPACE build -f '.*metadata.yaml|repository.yaml$|repository.meta.yaml.tar.zst$'
    - ls -l build/
    - >-
      luet repo update &&
      luet upgrade &&
      luet miner replace-package system/luet-build --for system/luet-build-testing &&
      luet cleanup --purge-repos
    - make create-repo
    - rm build/*.metadata.yaml -v && mv build/* ../artefacts/
    entrypoint:
    - /bin/sh
    - "-c"
    storage: "mcli"
    storage_path: /storage
    environment:
    - "REPO_BRANCH={{ $branch }}"
    - "REPO={{ $repo }}"
    - "SUDO="
    - LUET_SYSTEM__TMPDIR_BASE=/luettmp
    - LUET_YES=true
    - COMPRESSION=zstd
    - NAMESPACE={{ $reponame }}
    - "BUILD_ARGS=--config conf/luet.yaml"
    image: macaroni/phoenix-builder
    artefact_path: artefacts
    type: lxd
    directory: /
    publish_mode: append
    tag_namespace: "{{ $reponame }}"

  purge-cdn-files:
    name: "Purge files from CDN resource ({{ .namespace }})"
    type: "lxd"
    storage: "cloudflare"
    storage_path: /storage
    entrypoint:
    - /bin/sh
    - "-c"
    script:
    - >-
      git clone https://github.com/macaroni-os/macaroni-tasks.git
      /macaroni-tasks &&
      cd /macaroni-tasks &&
      chmod a+x /macaroni-tasks/cdn/api/purge-cloudflare-repo-files.sh &&
      /bin/bash -c 'source /storage/cloudflare.env && export NAME=${NAMESPACE} && export CDN_TOKEN CLOUDFLARE_ZONEID && cdn/api/purge-cloudflare-repo-files.sh'
    image: macaroni/phoenix-builder
    environment:
    - "NAMESPACE={{ .namespace }}"

# vim: filetype=yaml
